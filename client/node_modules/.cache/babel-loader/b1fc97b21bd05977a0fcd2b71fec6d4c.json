{"ast":null,"code":"import{routerMiddleware}from'connected-react-router';import createSagaMiddleware,{END}from'redux-saga';import{configureStore}from'@reduxjs/toolkit';import{createRootReducer}from'../models';export default(function(history){var sagaMiddleware=createSagaMiddleware();var isDev=process.env.NODE_ENV==='development';var store=configureStore({reducer:createRootReducer(history),middleware:[sagaMiddleware,routerMiddleware(history)],devTools:isDev});store.runSaga=sagaMiddleware.run;store.close=function(){return store.dispatch(END);};return store;});","map":{"version":3,"sources":["/Users/artemaveranov/diplom/src/store/index.js"],"names":["routerMiddleware","createSagaMiddleware","END","configureStore","createRootReducer","history","sagaMiddleware","isDev","process","env","NODE_ENV","store","reducer","middleware","devTools","runSaga","run","close","dispatch"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,wBAAjC,CAEA,MAAOC,CAAAA,oBAAP,EAA+BC,GAA/B,KAA0C,YAA1C,CAEA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,iBAAT,KAAkC,WAAlC,CAEA,eAAe,SAAAC,OAAO,CAAI,CACxB,GAAMC,CAAAA,cAAc,CAAGL,oBAAoB,EAA3C,CACA,GAAMM,CAAAA,KAAK,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAAvC,CAEA,GAAMC,CAAAA,KAAK,CAAGR,cAAc,CAAC,CAC3BS,OAAO,CAAER,iBAAiB,CAACC,OAAD,CADC,CAE3BQ,UAAU,CAAE,CAACP,cAAD,CAAiBN,gBAAgB,CAACK,OAAD,CAAjC,CAFe,CAG3BS,QAAQ,CAAEP,KAHiB,CAAD,CAA5B,CAMAI,KAAK,CAACI,OAAN,CAAgBT,cAAc,CAACU,GAA/B,CACAL,KAAK,CAACM,KAAN,CAAc,iBAAMN,CAAAA,KAAK,CAACO,QAAN,CAAehB,GAAf,CAAN,EAAd,CAEA,MAAOS,CAAAA,KAAP,CACD,CAdD","sourcesContent":["import { routerMiddleware } from 'connected-react-router';\n\nimport createSagaMiddleware, { END } from 'redux-saga';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createRootReducer } from '../models';\n\nexport default history => {\n  const sagaMiddleware = createSagaMiddleware();\n  const isDev = process.env.NODE_ENV === 'development';\n\n  const store = configureStore({\n    reducer: createRootReducer(history),\n    middleware: [sagaMiddleware, routerMiddleware(history)],\n    devTools: isDev,\n  });\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}