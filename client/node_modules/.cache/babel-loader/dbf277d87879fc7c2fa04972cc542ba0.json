{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-boost';\nimport fetch from 'node-fetch';\nimport { setContext } from '@apollo/client/link/context';\nimport { createHttpLink } from '@apollo/client';\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // return the headers to the context so httpLink can read them\n  return {\n    headers\n  };\n});\nexport default (isServer => {\n  // const API =\n  //   'https://api-eu-central-1.graphcms.com/v2/cke879aakruy401xw4ymd135i/master';\n  const API = 'https://api-eu-central-1.graphcms.com/v2/cklseprxijsng01yy6zkzaygc/master';\n  const httpLink = createHttpLink({\n    uri: API,\n    fetch: isServer ? fetch : null\n  });\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    ssrMode: isServer,\n    ssrForceFetchDelay: !isServer ? 100 : null\n  });\n});","map":{"version":3,"sources":["/Users/artemaveranov/diplom/src/apolloClient.js"],"names":["ApolloClient","InMemoryCache","fetch","setContext","createHttpLink","authLink","_","headers","isServer","API","httpLink","uri","link","concat","cache","ssrMode","ssrForceFetchDelay"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAMC,QAAQ,GAAGF,UAAU,CAAC,CAACG,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C;AACA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAL0B,CAA3B;AAOA,gBAAeC,QAAQ,IAAI;AACzB;AACA;AACA,QAAMC,GAAG,GAAG,2EAAZ;AACA,QAAMC,QAAQ,GAAGN,cAAc,CAAC;AAAEO,IAAAA,GAAG,EAAEF,GAAP;AAAYP,IAAAA,KAAK,EAAEM,QAAQ,GAAGN,KAAH,GAAW;AAAtC,GAAD,CAA/B;AACA,SAAO,IAAIF,YAAJ,CAAiB;AACtBY,IAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBH,QAAhB,CADgB;AAEtBI,IAAAA,KAAK,EAAE,IAAIb,aAAJ,EAFe;AAGtBc,IAAAA,OAAO,EAAEP,QAHa;AAItBQ,IAAAA,kBAAkB,EAAE,CAACR,QAAD,GAAY,GAAZ,GAAkB;AAJhB,GAAjB,CAAP;AAMD,CAXD","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-boost';\nimport fetch from 'node-fetch';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { createHttpLink } from '@apollo/client';\n\nconst authLink = setContext((_, { headers }) => {\n  // return the headers to the context so httpLink can read them\n  return {\n    headers,\n  };\n});\n\nexport default isServer => {\n  // const API =\n  //   'https://api-eu-central-1.graphcms.com/v2/cke879aakruy401xw4ymd135i/master';\n  const API = 'https://api-eu-central-1.graphcms.com/v2/cklseprxijsng01yy6zkzaygc/master';\n  const httpLink = createHttpLink({ uri: API, fetch: isServer ? fetch : null });\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    ssrMode: isServer,\n    ssrForceFetchDelay: !isServer ? 100 : null,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}