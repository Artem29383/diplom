{"ast":null,"code":"import { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createRootReducer } from '../models';\nexport default (history => {\n  const sagaMiddleware = createSagaMiddleware();\n  const isDev = process.env.NODE_ENV === 'development';\n  const store = configureStore({\n    reducer: createRootReducer(history),\n    middleware: [sagaMiddleware, routerMiddleware(history)],\n    devTools: isDev\n  });\n  store.runSaga = sagaMiddleware.run;\n\n  store.close = () => store.dispatch(END);\n\n  return store;\n});","map":{"version":3,"sources":["/Users/artemaveranov/diplom/src/store/index.js"],"names":["routerMiddleware","createSagaMiddleware","END","configureStore","createRootReducer","history","sagaMiddleware","isDev","process","env","NODE_ENV","store","reducer","middleware","devTools","runSaga","run","close","dispatch"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,oBAAP,IAA+BC,GAA/B,QAA0C,YAA1C;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,gBAAeC,OAAO,IAAI;AACxB,QAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,QAAMM,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;AAEA,QAAMC,KAAK,GAAGR,cAAc,CAAC;AAC3BS,IAAAA,OAAO,EAAER,iBAAiB,CAACC,OAAD,CADC;AAE3BQ,IAAAA,UAAU,EAAE,CAACP,cAAD,EAAiBN,gBAAgB,CAACK,OAAD,CAAjC,CAFe;AAG3BS,IAAAA,QAAQ,EAAEP;AAHiB,GAAD,CAA5B;AAMAI,EAAAA,KAAK,CAACI,OAAN,GAAgBT,cAAc,CAACU,GAA/B;;AACAL,EAAAA,KAAK,CAACM,KAAN,GAAc,MAAMN,KAAK,CAACO,QAAN,CAAehB,GAAf,CAApB;;AAEA,SAAOS,KAAP;AACD,CAdD","sourcesContent":["import { routerMiddleware } from 'connected-react-router';\n\nimport createSagaMiddleware, { END } from 'redux-saga';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createRootReducer } from '../models';\n\nexport default history => {\n  const sagaMiddleware = createSagaMiddleware();\n  const isDev = process.env.NODE_ENV === 'development';\n\n  const store = configureStore({\n    reducer: createRootReducer(history),\n    middleware: [sagaMiddleware, routerMiddleware(history)],\n    devTools: isDev,\n  });\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}