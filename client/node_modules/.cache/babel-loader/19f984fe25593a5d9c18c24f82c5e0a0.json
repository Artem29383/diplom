{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\n\nconst useResolver = validationSchema => {\n  _s();\n\n  return useCallback(async data => {\n    try {\n      const values = await validationSchema.validate(data, {\n        abortEarly: false\n      });\n      return {\n        values,\n        errors: {}\n      };\n    } catch (errors) {\n      return {\n        values: {},\n        errors: errors.inner.reduce((allErrors, currentError) => {\n          var _currentError$type;\n\n          return { ...allErrors,\n            [currentError.path]: {\n              type: (_currentError$type = currentError.type) !== null && _currentError$type !== void 0 ? _currentError$type : 'validation',\n              message: currentError.message\n            }\n          };\n        }, {})\n      };\n    }\n  }, [validationSchema]);\n};\n\n_s(useResolver, \"epj4qY15NHsef74wNqHIp5fdZmg=\");\n\nexport default useResolver;","map":{"version":3,"sources":["/Users/artemaveranov/diplom/client/src/hooks/useResolver.js"],"names":["useCallback","useResolver","validationSchema","data","values","validate","abortEarly","errors","inner","reduce","allErrors","currentError","path","type","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB;AAAA;;AAAA,SAChCF,WAAW,CACP,MAAMG,IAAN,IAAc;AACV,QAAI;AACA,YAAMC,MAAM,GAAG,MAAMF,gBAAgB,CAACG,QAAjB,CAA0BF,IAA1B,EAAgC;AACjDG,QAAAA,UAAU,EAAE;AADqC,OAAhC,CAArB;AAIA,aAAO;AACHF,QAAAA,MADG;AAEHG,QAAAA,MAAM,EAAE;AAFL,OAAP;AAIH,KATD,CASE,OAAOA,MAAP,EAAe;AACb,aAAO;AACHH,QAAAA,MAAM,EAAE,EADL;AAEHG,QAAAA,MAAM,EAAEA,MAAM,CAACC,KAAP,CAAaC,MAAb,CACJ,CAACC,SAAD,EAAYC,YAAZ;AAAA;;AAAA,iBAA8B,EAC1B,GAAGD,SADuB;AAE1B,aAACC,YAAY,CAACC,IAAd,GAAqB;AACjBC,cAAAA,IAAI,wBAAEF,YAAY,CAACE,IAAf,mEAAuB,YADV;AAEjBC,cAAAA,OAAO,EAAEH,YAAY,CAACG;AAFL;AAFK,WAA9B;AAAA,SADI,EAQJ,EARI;AAFL,OAAP;AAaH;AACJ,GA1BM,EA2BP,CAACZ,gBAAD,CA3BO,CADqB;AAAA,CAApC;;GAAMD,W;;AA+BN,eAAeA,WAAf","sourcesContent":["import { useCallback } from 'react';\n\nconst useResolver = validationSchema =>\n    useCallback(\n        async data => {\n            try {\n                const values = await validationSchema.validate(data, {\n                    abortEarly: false,\n                });\n\n                return {\n                    values,\n                    errors: {},\n                };\n            } catch (errors) {\n                return {\n                    values: {},\n                    errors: errors.inner.reduce(\n                        (allErrors, currentError) => ({\n                            ...allErrors,\n                            [currentError.path]: {\n                                type: currentError.type ?? 'validation',\n                                message: currentError.message,\n                            },\n                        }),\n                        {}\n                    ),\n                };\n            }\n        },\n        [validationSchema]\n    );\n\nexport default useResolver;"]},"metadata":{},"sourceType":"module"}