{"ast":null,"code":"import{ApolloClient}from'apollo-client';import{InMemoryCache}from'apollo-boost';import fetch from'node-fetch';import{setContext}from'@apollo/client/link/context';import{createHttpLink}from'@apollo/client';var authLink=setContext(function(_,_ref){var headers=_ref.headers;// return the headers to the context so httpLink can read them\nreturn{headers:headers};});export default(function(isServer){// const API =\n//   'https://api-eu-central-1.graphcms.com/v2/cke879aakruy401xw4ymd135i/master';\nvar API='https://api-eu-central-1.graphcms.com/v2/cklseprxijsng01yy6zkzaygc/master';var httpLink=createHttpLink({uri:API,fetch:isServer?fetch:null});return new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache(),ssrMode:isServer,ssrForceFetchDelay:!isServer?100:null});});","map":{"version":3,"sources":["/Users/artemaveranov/diplom/src/apolloClient.js"],"names":["ApolloClient","InMemoryCache","fetch","setContext","createHttpLink","authLink","_","headers","isServer","API","httpLink","uri","link","concat","cache","ssrMode","ssrForceFetchDelay"],"mappings":"AAAA,OAASA,YAAT,KAA6B,eAA7B,CACA,OAASC,aAAT,KAA8B,cAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,YAAlB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CAEA,OAASC,cAAT,KAA+B,gBAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGF,UAAU,CAAC,SAACG,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C;AACA,MAAO,CACLA,OAAO,CAAPA,OADK,CAAP,CAGD,CAL0B,CAA3B,CAOA,eAAe,SAAAC,QAAQ,CAAI,CACzB;AACA;AACA,GAAMC,CAAAA,GAAG,CAAG,2EAAZ,CACA,GAAMC,CAAAA,QAAQ,CAAGN,cAAc,CAAC,CAAEO,GAAG,CAAEF,GAAP,CAAYP,KAAK,CAAEM,QAAQ,CAAGN,KAAH,CAAW,IAAtC,CAAD,CAA/B,CACA,MAAO,IAAIF,CAAAA,YAAJ,CAAiB,CACtBY,IAAI,CAAEP,QAAQ,CAACQ,MAAT,CAAgBH,QAAhB,CADgB,CAEtBI,KAAK,CAAE,GAAIb,CAAAA,aAAJ,EAFe,CAGtBc,OAAO,CAAEP,QAHa,CAItBQ,kBAAkB,CAAE,CAACR,QAAD,CAAY,GAAZ,CAAkB,IAJhB,CAAjB,CAAP,CAMD,CAXD","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-boost';\nimport fetch from 'node-fetch';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { createHttpLink } from '@apollo/client';\n\nconst authLink = setContext((_, { headers }) => {\n  // return the headers to the context so httpLink can read them\n  return {\n    headers,\n  };\n});\n\nexport default isServer => {\n  // const API =\n  //   'https://api-eu-central-1.graphcms.com/v2/cke879aakruy401xw4ymd135i/master';\n  const API = 'https://api-eu-central-1.graphcms.com/v2/cklseprxijsng01yy6zkzaygc/master';\n  const httpLink = createHttpLink({ uri: API, fetch: isServer ? fetch : null });\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    ssrMode: isServer,\n    ssrForceFetchDelay: !isServer ? 100 : null,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}